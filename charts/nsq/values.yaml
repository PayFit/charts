# Default values for nsq.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Default NSQAdmin values
nsqadmin:
  replicaCount: 3
  nameOverride: "nsqadmin"
  fullnameOverride: "nsqadmin"
  serviceAccount:
    create: true
  image:
    repository: nsqio/nsq
    pullPolicy: IfNotPresent
    tag: ""
  imagePullSecrets: []
  annotations: {}
  priorityClassName: ""
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    type: ClusterIP
  ingress:
    enabled: false
    annotations: {}
    hosts:
      - host: chart-example.local
        paths: []
    tls: []
    resources: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Default NSQD values
nsqd:
  replicaCount: 3
  nameOverride: "nsqd"
  fullnameOverride: "nsqd"
  serviceAccount:
    create: true
  image:
    repository: nsqio/nsq
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  imagePullSecrets: []
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    type: ClusterIP
    externalTrafficPolicy: null
    port: 80
  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths: []
    tls: []
  resources: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}
  args: []
  persistence:
    enabled: true
    accessModes:
    - ReadWriteOnce
    mountPath: "/data"
    size: 1G
  metrics:
    enabled: false
    image:
      repository: emaincourt/nsq_exporter
      pullPolicy: IfNotPresent
      tag: 1.1.0
    # Enable this if you're using https://github.com/coreos/prometheus-operator
    serviceMonitor:
      enabled: false
      ## Specify a namespace if needed
      # namespace: monitoring
      # fallback to the prometheus default unless specified
      # interval: 10s

    ## Custom PrometheusRule to be defined
    ## The value is evaluated as a template, so, for example, the value can depend on .Release or .Chart
    ## ref: https://github.com/coreos/prometheus-operator#customresourcedefinitions
    prometheusRule:
      enabled: false
      additionalLabels: {}
      namespace: ''
      ## Prometheus rules
      ## Make sure to constraint the rules to the current service.
      rules: []


# Default NSQLookupd values
nsqlookupd:
  replicaCount: 3
  nameOverride: "nsqlookupd"
  fullnameOverride: "nsqlookupd"
  serviceAccount:
    create: true
  image:
    repository: nsqio/nsq
    pullPolicy: IfNotPresent
    tag: ""
  imagePullSecrets: []
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    type: ClusterIP
  ingress:
    enabled: false
    annotations: {}
    hosts:
      - host: chart-example.local
        paths: []
    tls: []
  resources: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}
